{"version":3,"file":"bootstrap.js","sourceRoot":"","sources":["../../../src/@ionic-native/core/bootstrap.ts"],"names":[],"mappings":"AAAA,MAAM;IACJ,IAAM,oBAAoB,GAAG,IAAI,CAAC;;;;;IAMlC,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAE1B,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE;QACvC,OAAO,CAAC,GAAG,CACT,kDAA+C,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,SAAK,CACxE,CAAC;QACF,YAAY,GAAG,IAAI,CAAC;KACrB,CAAC,CAAC;IAEH,UAAU,CAAC;QACT,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,OAAO,CAAC,IAAI,CACV,mDAAiD,oBAAoB,6HAA0H,CAChM,CAAC;SACH;KACF,EAAE,oBAAoB,CAAC,CAAC;CAC1B","sourcesContent":["export function checkReady() {\n  const DEVICE_READY_TIMEOUT = 5000;\n\n  // To help developers using cordova, we listen for the device ready event and\n  // log an error if it didn't fire in a reasonable amount of time. Generally,\n  // when this happens, developers should remove and reinstall plugins, since\n  // an inconsistent plugin is often the culprit.\n  const before = Date.now();\n\n  let didFireReady = false;\n  document.addEventListener('deviceready', () => {\n    console.log(\n      `Ionic Native: deviceready event fired after ${Date.now() - before} ms`\n    );\n    didFireReady = true;\n  });\n\n  setTimeout(() => {\n    if (!didFireReady && !!window.cordova) {\n      console.warn(\n        `Ionic Native: deviceready did not fire within ${DEVICE_READY_TIMEOUT}ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.`\n      );\n    }\n  }, DEVICE_READY_TIMEOUT);\n}\n"]}